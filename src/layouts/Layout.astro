---
interface Props {
  title: string;
}

const { title } = Astro.props;
// import "../styles/variables.css"
import Nav from "../components/Nav.jsx";
import Footer from "../components/Footer.tsx";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta
      name="description"
      content="I am a fullstack web engineer that builds web sites and applications to solve business problems using the beauty of programming logic in combination with modern technological solutions, tools and techniques"
    />
    <meta name="viewport" content="width=device-width" , initial-scale="1.0" />
    <link rel="icon" type="image/png" href="/favicons/favicon-32x32.png" />
    <link rel="apple-touch-icon" href="/favicons/apple-touch-icon.png" />
    <link rel="apple-touch-icon" href="/favicons/android-chrome-192x192.png" />
    <link rel="stylesheet" href="/syntax-highlight/prism-synthwave84.css" />
    <link rel="stylesheet" href="/styles/variables.css" />
    <meta name="generator" content={Astro.generator} />
    <meta title={title} />
    <title>{title}</title>
    <script is:inline src="/scripts/themeToggle.js"></script>
  </head>
  <body class="w-full p-1 bg-slate-300 dark:bg-gray-600">
    <Nav client:load />
    <slot />
    <!-- <Footer /> -->
  </body>
</html>
<style is:global>
  @font-face {
    font-family: "Gotham";
    src: url("/fonts/Gotham-Light.woff2") format("woff2");
    font-display: swap;
  }

  @font-face {
    font-family: "Gopher";
    src: url("/fonts/GopherText-Bold.woff2") format("woff2");
    font-display: swap;
  }

  body {
    /* text-rendering: optimizeLegibility;
    --webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    position: relative; */
    /* background-color: var(--bg); */
  }

  ul {
    list-style: none;
  }

  a {
    text-decoration: none;
  }
</style>

<script>
  // import gsap from "gsap";

  // let previousScrollPosition = 0;


  // const isScrollingDown = () => {
  //   const currentScrolledPosition = window.scrollY || window.pageYOffset;
  //   let scrollingDown;

  //   currentScrolledPosition > previousScrollPosition
  //     ? (scrollingDown = true)
  //     : (scrollingDown = false);

  //   previousScrollPosition = currentScrolledPosition;

  //   return scrollingDown;
  // };

  // const handleNavScroll = () => {
  //   const nav = document.querySelector(".navigation");

  //   if (isScrollingDown()) {
  //     nav.classList.add("scroll-down");
  //     nav.classList.remove("scroll-up");
  //   } else {
  //     nav.classList.add("scroll-up");
  //     nav.classList.remove("scroll-down");
  //   }
  // };

  // let throttleWait;

  // const throttle = (callback, time) => {
  //   if (throttleWait) return;

  //   throttleWait = true;

  //   setTimeout(() => {
  //     callback();

  //     throttleWait = false;
  //   }, time);
  // };

  // window.addEventListener("scroll", handleNavScroll);

  // page loader logic
</script>
